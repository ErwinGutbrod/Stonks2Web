@model Stonks2.DAL.Models.ChatHub
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Request.IsAuthenticated)
    {
        ViewBag.UserName = User.Identity.GetUserName();
    }
}

<h2>Details</h2>

<div>
    <h4>ChatHub</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ChatHubName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ChatHubName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ChatHubDescription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ChatHubDescription)
        </dd>

    </dl>
</div>
<p>
    <main>
        <head>
            <title>SignalR Simple Chat</title>
            <style type="text/css">
                .container {
                    background-color: #99CCFF;
                    border: thick solid #808080;
                    padding: 20px;
                    margin: 20px;
                }
            </style>
        </head>
        @{
            if (!Request.IsAuthenticated)
            {
                <body>
                    <div>
                        PLEASE LOG IN FIRST!!!
                    </div>
                </body>
            }
            else
            {
                <body>
                    <div class="container">
                        <input type="text" id="message" />
                        <input type="button" id="sendmessage" value="Send" />
                        <input type="hidden" id="displayname" />
                        <ul id="discussion">
                            @foreach (var item in Model.Messages)
                            {
                                <li>
                                    <strong>
                                        @Html.DisplayFor(modelItem => item.TimeStamp) - @Html.DisplayFor(modelItem => item.Sender.Email) : </strong> @Html.DisplayFor(modelItem => item.Message)
                                </li>
                             }
                        </ul>
                    </div>
                    @section scripts {
                        <!--Script references. -->
                        <!--Reference the jQuery library. -->
                        <script src="~/Scripts/jquery-3.4.1.min.js"></script>
                        <!--Reference the SignalR library. -->
                        <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
                        <!--Reference the autogenerated SignalR hub script. -->
                        <script src="~/signalr/hubs"></script>
                        <!--Add script to update the page and send messages.-->
                        <script type="text/javascript">
                $(function () {
                    // Declare a proxy to reference the hub.
                    var chat = $.connection.chatHub;
                    // Create a function that the hub can call to broadcast messages.
                    chat.client.broadcastMessage = function (timeStamp, name, message) {
                        // Html encode display name and message.
                        var encodedTimeStamp = $('<div />').text(timeStamp).html();
                        var encodedName = $('<div />').text(name).html();
                        var encodedMsg = $('<div />').text(message).html();
                        // Add the message to the page.
                        $('#discussion').append('<li><strong>' + encodedTimeStamp + ' - ' + encodedName
                           + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
                    };
                    // Get the user name and store it to prepend to messages.
                    $('#displayname').val('@ViewBag.UserName');
                    // Set initial focus to message input box.
                    $('#message').focus();
                    // Start the connection.
                    $.connection.hub.start().done(function () {
                        $('#sendmessage').click(function () {
                            // Call the Send method on the hub.
                             chat.server.send(@Model.ChatHubId, $('#displayname').val(), $('#message').val());
                            // Clear text box and reset focus for next comment.
                            $('#message').val('').focus();
                        });
                    });
                });
                        </script>
                    }
                </body>
            }
        }

    </main>
    @Html.ActionLink("Back to List", "Index")
</p>
